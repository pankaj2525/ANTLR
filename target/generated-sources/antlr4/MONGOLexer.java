// Generated from MONGOLexer.g4 by ANTLR 4.4
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class MONGOLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		SPACE=1, DB=2, FIND=3, INSERT=4, INSERTONE=5, INSERTMANY=6, UPDATE=7, 
		UPDATEMANY=8, UPDATEONE=9, DELETEONE=10, DELETEMANY=11, AGGREGATE=12, 
		ID=13, UNDERSCORE=14, DOT=15, OPEN_ROUND_BRACKET=16, CLOSE_ROUND_BRACKET=17, 
		OPEN_SQUARE_BRACKET=18, CLOSE_SQUARE_BRACKET=19, OPEN_CURLY_BRACKET=20, 
		CLOSE_CURLY_BRACKET=21, ISTO_CHAR=22, COMMAR_CHAR=23, TRUE=24, FALSE=25, 
		NULL=26, STRING=27, NUMBER=28, KEYWORDS=29, DATE=30, DATETYPE=31, CustomDate=32, 
		MILLISEC=33, YYYY=34, MM=35, DD=36, HH=37, MIN=38, SEC=39;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''"
	};
	public static final String[] ruleNames = {
		"SPACE", "DB", "FIND", "INSERT", "INSERTONE", "INSERTMANY", "UPDATE", 
		"UPDATEMANY", "UPDATEONE", "DELETEONE", "DELETEMANY", "AGGREGATE", "ID", 
		"UNDERSCORE", "DOT", "OPEN_ROUND_BRACKET", "CLOSE_ROUND_BRACKET", "OPEN_SQUARE_BRACKET", 
		"CLOSE_SQUARE_BRACKET", "OPEN_CURLY_BRACKET", "CLOSE_CURLY_BRACKET", "ISTO_CHAR", 
		"COMMAR_CHAR", "TRUE", "FALSE", "NULL", "STRING", "NUMBER", "KEYWORDS", 
		"DATE", "DATETYPE", "CustomDate", "MILLISEC", "YYYY", "MM", "DD", "HH", 
		"MIN", "SEC", "ID_LITERAL", "ALPHA_LITERAL", "ALPHABETS", "HEX_DIGIT", 
		"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", 
		"O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "ESC", "UNICODE", 
		"HEX", "INT_NO", "EXP"
	};


	public MONGOLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "MONGOLexer.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2)\u01ff\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\3\2\6\2\u0099\n\2\r\2\16\2\u009a\3\2\3\2\3\3\3\3\3\3\3"+
		"\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6"+
		"\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3"+
		"\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n"+
		"\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3"+
		"\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r"+
		"\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21\3"+
		"\22\3\22\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3"+
		"\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3"+
		"\33\3\33\3\34\3\34\3\34\7\34\u0127\n\34\f\34\16\34\u012a\13\34\3\34\3"+
		"\34\3\35\5\35\u012f\n\35\3\35\3\35\3\35\6\35\u0134\n\35\r\35\16\35\u0135"+
		"\3\35\5\35\u0139\n\35\3\35\5\35\u013c\n\35\3\35\3\35\3\35\3\35\5\35\u0142"+
		"\n\35\3\35\5\35\u0145\n\35\3\36\5\36\u0148\n\36\3\36\3\36\7\36\u014c\n"+
		"\36\f\36\16\36\u014f\13\36\3\37\3\37\3\37\5\37\u0154\n\37\3\37\3\37\3"+
		" \3 \3 \3 \5 \u015c\n \3 \3 \3 \5 \u0161\n \3 \3 \3 \3 \3 \3!\3!\3!\3"+
		"!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\5\"\u017c\n\"\3"+
		"#\3#\3#\3#\3#\3$\3$\3$\3%\3%\3%\3&\3&\3&\3\'\3\'\3\'\3(\3(\3(\3)\7)\u0193"+
		"\n)\f)\16)\u0196\13)\3)\6)\u0199\n)\r)\16)\u019a\3)\7)\u019e\n)\f)\16"+
		")\u01a1\13)\3*\5*\u01a4\n*\3*\6*\u01a7\n*\r*\16*\u01a8\3+\3+\3,\3,\3-"+
		"\3-\3.\3.\3/\3/\3\60\3\60\3\61\3\61\3\62\3\62\3\63\3\63\3\64\3\64\3\65"+
		"\3\65\3\66\3\66\3\67\3\67\38\38\39\39\3:\3:\3;\3;\3<\3<\3=\3=\3>\3>\3"+
		"?\3?\3@\3@\3A\3A\3B\3B\3C\3C\3D\3D\3E\3E\3F\3F\3G\3G\3G\5G\u01e6\nG\3"+
		"H\3H\3H\3H\3H\3H\3I\3I\3J\3J\3J\7J\u01f3\nJ\fJ\16J\u01f6\13J\5J\u01f8"+
		"\nJ\3K\3K\5K\u01fc\nK\3K\3K\4\u0194\u019a\2L\3\3\5\4\7\5\t\6\13\7\r\b"+
		"\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26"+
		"+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q\2"+
		"S\2U\2W\2Y\2[\2]\2_\2a\2c\2e\2g\2i\2k\2m\2o\2q\2s\2u\2w\2y\2{\2}\2\177"+
		"\2\u0081\2\u0083\2\u0085\2\u0087\2\u0089\2\u008b\2\u008d\2\u008f\2\u0091"+
		"\2\u0093\2\u0095\2\3\2)\5\2\13\f\17\17\"\"\4\2$$^^\3\2\62;\4\2&&aa\4\2"+
		"C\\c|\7\2&&\62;C\\aac|\6\2&&C\\aac|\6\2\62;C\\aac|\3\2C|\5\2\62;CHch\4"+
		"\2CCcc\4\2DDdd\4\2EEee\4\2FFff\4\2GGgg\4\2HHhh\4\2IIii\4\2JJjj\4\2KKk"+
		"k\4\2LLll\4\2MMmm\4\2NNnn\4\2OOoo\4\2PPpp\4\2QQqq\4\2RRrr\4\2SSss\4\2"+
		"TTtt\4\2UUuu\4\2VVvv\4\2WWww\4\2XXxx\4\2YYyy\4\2ZZzz\4\2[[{{\4\2\\\\|"+
		"|\n\2$$\61\61^^ddhhppttvv\3\2\63;\4\2--//\u01f4\2\3\3\2\2\2\2\5\3\2\2"+
		"\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21"+
		"\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2"+
		"\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3"+
		"\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3"+
		"\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3"+
		"\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2"+
		"\2\2M\3\2\2\2\2O\3\2\2\2\3\u0098\3\2\2\2\5\u009e\3\2\2\2\7\u00a1\3\2\2"+
		"\2\t\u00a6\3\2\2\2\13\u00ad\3\2\2\2\r\u00b7\3\2\2\2\17\u00c2\3\2\2\2\21"+
		"\u00c9\3\2\2\2\23\u00d4\3\2\2\2\25\u00de\3\2\2\2\27\u00e8\3\2\2\2\31\u00f3"+
		"\3\2\2\2\33\u00fd\3\2\2\2\35\u00ff\3\2\2\2\37\u0101\3\2\2\2!\u0103\3\2"+
		"\2\2#\u0105\3\2\2\2%\u0107\3\2\2\2\'\u0109\3\2\2\2)\u010b\3\2\2\2+\u010d"+
		"\3\2\2\2-\u010f\3\2\2\2/\u0111\3\2\2\2\61\u0113\3\2\2\2\63\u0118\3\2\2"+
		"\2\65\u011e\3\2\2\2\67\u0123\3\2\2\29\u0144\3\2\2\2;\u0147\3\2\2\2=\u0150"+
		"\3\2\2\2?\u015b\3\2\2\2A\u0167\3\2\2\2C\u017b\3\2\2\2E\u017d\3\2\2\2G"+
		"\u0182\3\2\2\2I\u0185\3\2\2\2K\u0188\3\2\2\2M\u018b\3\2\2\2O\u018e\3\2"+
		"\2\2Q\u0194\3\2\2\2S\u01a3\3\2\2\2U\u01aa\3\2\2\2W\u01ac\3\2\2\2Y\u01ae"+
		"\3\2\2\2[\u01b0\3\2\2\2]\u01b2\3\2\2\2_\u01b4\3\2\2\2a\u01b6\3\2\2\2c"+
		"\u01b8\3\2\2\2e\u01ba\3\2\2\2g\u01bc\3\2\2\2i\u01be\3\2\2\2k\u01c0\3\2"+
		"\2\2m\u01c2\3\2\2\2o\u01c4\3\2\2\2q\u01c6\3\2\2\2s\u01c8\3\2\2\2u\u01ca"+
		"\3\2\2\2w\u01cc\3\2\2\2y\u01ce\3\2\2\2{\u01d0\3\2\2\2}\u01d2\3\2\2\2\177"+
		"\u01d4\3\2\2\2\u0081\u01d6\3\2\2\2\u0083\u01d8\3\2\2\2\u0085\u01da\3\2"+
		"\2\2\u0087\u01dc\3\2\2\2\u0089\u01de\3\2\2\2\u008b\u01e0\3\2\2\2\u008d"+
		"\u01e2\3\2\2\2\u008f\u01e7\3\2\2\2\u0091\u01ed\3\2\2\2\u0093\u01f7\3\2"+
		"\2\2\u0095\u01f9\3\2\2\2\u0097\u0099\t\2\2\2\u0098\u0097\3\2\2\2\u0099"+
		"\u009a\3\2\2\2\u009a\u0098\3\2\2\2\u009a\u009b\3\2\2\2\u009b\u009c\3\2"+
		"\2\2\u009c\u009d\b\2\2\2\u009d\4\3\2\2\2\u009e\u009f\5_\60\2\u009f\u00a0"+
		"\5[.\2\u00a0\6\3\2\2\2\u00a1\u00a2\5c\62\2\u00a2\u00a3\5i\65\2\u00a3\u00a4"+
		"\5s:\2\u00a4\u00a5\5_\60\2\u00a5\b\3\2\2\2\u00a6\u00a7\7k\2\2\u00a7\u00a8"+
		"\7p\2\2\u00a8\u00a9\7u\2\2\u00a9\u00aa\7g\2\2\u00aa\u00ab\7t\2\2\u00ab"+
		"\u00ac\7v\2\2\u00ac\n\3\2\2\2\u00ad\u00ae\7k\2\2\u00ae\u00af\7p\2\2\u00af"+
		"\u00b0\7u\2\2\u00b0\u00b1\7g\2\2\u00b1\u00b2\7t\2\2\u00b2\u00b3\7v\2\2"+
		"\u00b3\u00b4\7Q\2\2\u00b4\u00b5\7p\2\2\u00b5\u00b6\7g\2\2\u00b6\f\3\2"+
		"\2\2\u00b7\u00b8\7k\2\2\u00b8\u00b9\7p\2\2\u00b9\u00ba\7u\2\2\u00ba\u00bb"+
		"\7g\2\2\u00bb\u00bc\7t\2\2\u00bc\u00bd\7v\2\2\u00bd\u00be\7O\2\2\u00be"+
		"\u00bf\7c\2\2\u00bf\u00c0\7p\2\2\u00c0\u00c1\7{\2\2\u00c1\16\3\2\2\2\u00c2"+
		"\u00c3\7w\2\2\u00c3\u00c4\7r\2\2\u00c4\u00c5\7f\2\2\u00c5\u00c6\7c\2\2"+
		"\u00c6\u00c7\7v\2\2\u00c7\u00c8\7g\2\2\u00c8\20\3\2\2\2\u00c9\u00ca\7"+
		"w\2\2\u00ca\u00cb\7r\2\2\u00cb\u00cc\7f\2\2\u00cc\u00cd\7c\2\2\u00cd\u00ce"+
		"\7v\2\2\u00ce\u00cf\7g\2\2\u00cf\u00d0\7O\2\2\u00d0\u00d1\7c\2\2\u00d1"+
		"\u00d2\7p\2\2\u00d2\u00d3\7{\2\2\u00d3\22\3\2\2\2\u00d4\u00d5\7w\2\2\u00d5"+
		"\u00d6\7r\2\2\u00d6\u00d7\7f\2\2\u00d7\u00d8\7c\2\2\u00d8\u00d9\7v\2\2"+
		"\u00d9\u00da\7g\2\2\u00da\u00db\7Q\2\2\u00db\u00dc\7p\2\2\u00dc\u00dd"+
		"\7g\2\2\u00dd\24\3\2\2\2\u00de\u00df\7f\2\2\u00df\u00e0\7g\2\2\u00e0\u00e1"+
		"\7n\2\2\u00e1\u00e2\7g\2\2\u00e2\u00e3\7v\2\2\u00e3\u00e4\7g\2\2\u00e4"+
		"\u00e5\7Q\2\2\u00e5\u00e6\7p\2\2\u00e6\u00e7\7g\2\2\u00e7\26\3\2\2\2\u00e8"+
		"\u00e9\7f\2\2\u00e9\u00ea\7g\2\2\u00ea\u00eb\7n\2\2\u00eb\u00ec\7g\2\2"+
		"\u00ec\u00ed\7v\2\2\u00ed\u00ee\7g\2\2\u00ee\u00ef\7O\2\2\u00ef\u00f0"+
		"\7c\2\2\u00f0\u00f1\7p\2\2\u00f1\u00f2\7{\2\2\u00f2\30\3\2\2\2\u00f3\u00f4"+
		"\7c\2\2\u00f4\u00f5\7i\2\2\u00f5\u00f6\7i\2\2\u00f6\u00f7\7t\2\2\u00f7"+
		"\u00f8\7g\2\2\u00f8\u00f9\7i\2\2\u00f9\u00fa\7c\2\2\u00fa\u00fb\7v\2\2"+
		"\u00fb\u00fc\7g\2\2\u00fc\32\3\2\2\2\u00fd\u00fe\5S*\2\u00fe\34\3\2\2"+
		"\2\u00ff\u0100\7a\2\2\u0100\36\3\2\2\2\u0101\u0102\7\60\2\2\u0102 \3\2"+
		"\2\2\u0103\u0104\7*\2\2\u0104\"\3\2\2\2\u0105\u0106\7+\2\2\u0106$\3\2"+
		"\2\2\u0107\u0108\7]\2\2\u0108&\3\2\2\2\u0109\u010a\7_\2\2\u010a(\3\2\2"+
		"\2\u010b\u010c\7}\2\2\u010c*\3\2\2\2\u010d\u010e\7\177\2\2\u010e,\3\2"+
		"\2\2\u010f\u0110\7<\2\2\u0110.\3\2\2\2\u0111\u0112\7.\2\2\u0112\60\3\2"+
		"\2\2\u0113\u0114\7v\2\2\u0114\u0115\7t\2\2\u0115\u0116\7w\2\2\u0116\u0117"+
		"\7g\2\2\u0117\62\3\2\2\2\u0118\u0119\7h\2\2\u0119\u011a\7c\2\2\u011a\u011b"+
		"\7n\2\2\u011b\u011c\7u\2\2\u011c\u011d\7g\2\2\u011d\64\3\2\2\2\u011e\u011f"+
		"\7p\2\2\u011f\u0120\7w\2\2\u0120\u0121\7n\2\2\u0121\u0122\7n\2\2\u0122"+
		"\66\3\2\2\2\u0123\u0128\7$\2\2\u0124\u0127\5\u008dG\2\u0125\u0127\n\3"+
		"\2\2\u0126\u0124\3\2\2\2\u0126\u0125\3\2\2\2\u0127\u012a\3\2\2\2\u0128"+
		"\u0126\3\2\2\2\u0128\u0129\3\2\2\2\u0129\u012b\3\2\2\2\u012a\u0128\3\2"+
		"\2\2\u012b\u012c\7$\2\2\u012c8\3\2\2\2\u012d\u012f\7/\2\2\u012e\u012d"+
		"\3\2\2\2\u012e\u012f\3\2\2\2\u012f\u0130\3\2\2\2\u0130\u0131\5\u0093J"+
		"\2\u0131\u0133\7\60\2\2\u0132\u0134\t\4\2\2\u0133\u0132\3\2\2\2\u0134"+
		"\u0135\3\2\2\2\u0135\u0133\3\2\2\2\u0135\u0136\3\2\2\2\u0136\u0138\3\2"+
		"\2\2\u0137\u0139\5\u0095K\2\u0138\u0137\3\2\2\2\u0138\u0139\3\2\2\2\u0139"+
		"\u0145\3\2\2\2\u013a\u013c\7/\2\2\u013b\u013a\3\2\2\2\u013b\u013c\3\2"+
		"\2\2\u013c\u013d\3\2\2\2\u013d\u013e\5\u0093J\2\u013e\u013f\5\u0095K\2"+
		"\u013f\u0145\3\2\2\2\u0140\u0142\7/\2\2\u0141\u0140\3\2\2\2\u0141\u0142"+
		"\3\2\2\2\u0142\u0143\3\2\2\2\u0143\u0145\5\u0093J\2\u0144\u012e\3\2\2"+
		"\2\u0144\u013b\3\2\2\2\u0144\u0141\3\2\2\2\u0145:\3\2\2\2\u0146\u0148"+
		"\t\5\2\2\u0147\u0146\3\2\2\2\u0147\u0148\3\2\2\2\u0148\u0149\3\2\2\2\u0149"+
		"\u014d\t\6\2\2\u014a\u014c\t\6\2\2\u014b\u014a\3\2\2\2\u014c\u014f\3\2"+
		"\2\2\u014d\u014b\3\2\2\2\u014d\u014e\3\2\2\2\u014e<\3\2\2\2\u014f\u014d"+
		"\3\2\2\2\u0150\u0151\5? \2\u0151\u0153\7*\2\2\u0152\u0154\5A!\2\u0153"+
		"\u0152\3\2\2\2\u0153\u0154\3\2\2\2\u0154\u0155\3\2\2\2\u0155\u0156\7+"+
		"\2\2\u0156>\3\2\2\2\u0157\u0158\7p\2\2\u0158\u0159\7g\2\2\u0159\u015a"+
		"\7y\2\2\u015a\u015c\7\"\2\2\u015b\u0157\3\2\2\2\u015b\u015c\3\2\2\2\u015c"+
		"\u0160\3\2\2\2\u015d\u015e\7K\2\2\u015e\u015f\7U\2\2\u015f\u0161\7Q\2"+
		"\2\u0160\u015d\3\2\2\2\u0160\u0161\3\2\2\2\u0161\u0162\3\2\2\2\u0162\u0163"+
		"\7F\2\2\u0163\u0164\7c\2\2\u0164\u0165\7v\2\2\u0165\u0166\7g\2\2\u0166"+
		"@\3\2\2\2\u0167\u0168\7$\2\2\u0168\u0169\5E#\2\u0169\u016a\7/\2\2\u016a"+
		"\u016b\5G$\2\u016b\u016c\7/\2\2\u016c\u016d\5I%\2\u016d\u016e\5\177@\2"+
		"\u016e\u016f\5K&\2\u016f\u0170\7<\2\2\u0170\u0171\5M\'\2\u0171\u0172\7"+
		"<\2\2\u0172\u0173\5O(\2\u0173\u0174\5C\"\2\u0174\u0175\5\u008bF\2\u0175"+
		"\u0176\7$\2\2\u0176B\3\2\2\2\u0177\u0178\7\60\2\2\u0178\u0179\t\4\2\2"+
		"\u0179\u017a\t\4\2\2\u017a\u017c\t\4\2\2\u017b\u0177\3\2\2\2\u017b\u017c"+
		"\3\2\2\2\u017cD\3\2\2\2\u017d\u017e\t\4\2\2\u017e\u017f\t\4\2\2\u017f"+
		"\u0180\t\4\2\2\u0180\u0181\t\4\2\2\u0181F\3\2\2\2\u0182\u0183\t\4\2\2"+
		"\u0183\u0184\t\4\2\2\u0184H\3\2\2\2\u0185\u0186\t\4\2\2\u0186\u0187\t"+
		"\4\2\2\u0187J\3\2\2\2\u0188\u0189\t\4\2\2\u0189\u018a\t\4\2\2\u018aL\3"+
		"\2\2\2\u018b\u018c\t\4\2\2\u018c\u018d\t\4\2\2\u018dN\3\2\2\2\u018e\u018f"+
		"\t\4\2\2\u018f\u0190\t\4\2\2\u0190P\3\2\2\2\u0191\u0193\t\7\2\2\u0192"+
		"\u0191\3\2\2\2\u0193\u0196\3\2\2\2\u0194\u0195\3\2\2\2\u0194\u0192\3\2"+
		"\2\2\u0195\u0198\3\2\2\2\u0196\u0194\3\2\2\2\u0197\u0199\t\b\2\2\u0198"+
		"\u0197\3\2\2\2\u0199\u019a\3\2\2\2\u019a\u019b\3\2\2\2\u019a\u0198\3\2"+
		"\2\2\u019b\u019f\3\2\2\2\u019c\u019e\t\7\2\2\u019d\u019c\3\2\2\2\u019e"+
		"\u01a1\3\2\2\2\u019f\u019d\3\2\2\2\u019f\u01a0\3\2\2\2\u01a0R\3\2\2\2"+
		"\u01a1\u019f\3\2\2\2\u01a2\u01a4\t\5\2\2\u01a3\u01a2\3\2\2\2\u01a3\u01a4"+
		"\3\2\2\2\u01a4\u01a6\3\2\2\2\u01a5\u01a7\t\t\2\2\u01a6\u01a5\3\2\2\2\u01a7"+
		"\u01a8\3\2\2\2\u01a8\u01a6\3\2\2\2\u01a8\u01a9\3\2\2\2\u01a9T\3\2\2\2"+
		"\u01aa\u01ab\t\n\2\2\u01abV\3\2\2\2\u01ac\u01ad\t\13\2\2\u01adX\3\2\2"+
		"\2\u01ae\u01af\t\f\2\2\u01afZ\3\2\2\2\u01b0\u01b1\t\r\2\2\u01b1\\\3\2"+
		"\2\2\u01b2\u01b3\t\16\2\2\u01b3^\3\2\2\2\u01b4\u01b5\t\17\2\2\u01b5`\3"+
		"\2\2\2\u01b6\u01b7\t\20\2\2\u01b7b\3\2\2\2\u01b8\u01b9\t\21\2\2\u01b9"+
		"d\3\2\2\2\u01ba\u01bb\t\22\2\2\u01bbf\3\2\2\2\u01bc\u01bd\t\23\2\2\u01bd"+
		"h\3\2\2\2\u01be\u01bf\t\24\2\2\u01bfj\3\2\2\2\u01c0\u01c1\t\25\2\2\u01c1"+
		"l\3\2\2\2\u01c2\u01c3\t\26\2\2\u01c3n\3\2\2\2\u01c4\u01c5\t\27\2\2\u01c5"+
		"p\3\2\2\2\u01c6\u01c7\t\30\2\2\u01c7r\3\2\2\2\u01c8\u01c9\t\31\2\2\u01c9"+
		"t\3\2\2\2\u01ca\u01cb\t\32\2\2\u01cbv\3\2\2\2\u01cc\u01cd\t\33\2\2\u01cd"+
		"x\3\2\2\2\u01ce\u01cf\t\34\2\2\u01cfz\3\2\2\2\u01d0\u01d1\t\35\2\2\u01d1"+
		"|\3\2\2\2\u01d2\u01d3\t\36\2\2\u01d3~\3\2\2\2\u01d4\u01d5\t\37\2\2\u01d5"+
		"\u0080\3\2\2\2\u01d6\u01d7\t \2\2\u01d7\u0082\3\2\2\2\u01d8\u01d9\t!\2"+
		"\2\u01d9\u0084\3\2\2\2\u01da\u01db\t\"\2\2\u01db\u0086\3\2\2\2\u01dc\u01dd"+
		"\t#\2\2\u01dd\u0088\3\2\2\2\u01de\u01df\t$\2\2\u01df\u008a\3\2\2\2\u01e0"+
		"\u01e1\t%\2\2\u01e1\u008c\3\2\2\2\u01e2\u01e5\7^\2\2\u01e3\u01e6\t&\2"+
		"\2\u01e4\u01e6\5\u008fH\2\u01e5\u01e3\3\2\2\2\u01e5\u01e4\3\2\2\2\u01e6"+
		"\u008e\3\2\2\2\u01e7\u01e8\7w\2\2\u01e8\u01e9\5\u0091I\2\u01e9\u01ea\5"+
		"\u0091I\2\u01ea\u01eb\5\u0091I\2\u01eb\u01ec\5\u0091I\2\u01ec\u0090\3"+
		"\2\2\2\u01ed\u01ee\t\13\2\2\u01ee\u0092\3\2\2\2\u01ef\u01f8\7\62\2\2\u01f0"+
		"\u01f4\t\'\2\2\u01f1\u01f3\t\4\2\2\u01f2\u01f1\3\2\2\2\u01f3\u01f6\3\2"+
		"\2\2\u01f4\u01f2\3\2\2\2\u01f4\u01f5\3\2\2\2\u01f5\u01f8\3\2\2\2\u01f6"+
		"\u01f4\3\2\2\2\u01f7\u01ef\3\2\2\2\u01f7\u01f0\3\2\2\2\u01f8\u0094\3\2"+
		"\2\2\u01f9\u01fb\t\20\2\2\u01fa\u01fc\t(\2\2\u01fb\u01fa\3\2\2\2\u01fb"+
		"\u01fc\3\2\2\2\u01fc\u01fd\3\2\2\2\u01fd\u01fe\5\u0093J\2\u01fe\u0096"+
		"\3\2\2\2\33\2\u009a\u0126\u0128\u012e\u0135\u0138\u013b\u0141\u0144\u0147"+
		"\u014d\u0153\u015b\u0160\u017b\u0194\u019a\u019f\u01a3\u01a8\u01e5\u01f4"+
		"\u01f7\u01fb\3\2\3\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}